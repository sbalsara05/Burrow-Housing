services:
  # Backend service
  backend:
    build: ./backend
    container_name: burrow-backend
    ports:
      - "5001:5000"  # External port 5001, internal port 5000
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGODB_URI=mongodb+srv://sbalsara:Seattleusa22@cluster-burrow.xsloa.mongodb.net/
      - REDIS_URL=redis://default:sCnBOZaENYjHg3GMQOuIilwTVUGeFUTq@redis-15505.c275.us-east-1-4.ec2.redns.redis-cloud.com:15505
    depends_on:
      - mongo
      - redis
    volumes:
      # Mount source code for live development
      - ./backend:/app
      # Preserve node_modules in container (avoid conflicts)
      - /app/node_modules
    networks:
      - burrow-network

  # Frontend service - Development Mode
  frontend:
    build:
      context: ./homy
      dockerfile: Dockerfile.dev
    container_name: burrow-frontend
    ports:
      - "3000:5173"  # Map external 3000 to internal 5173 (Vite default)
    depends_on:
      - backend
    volumes:
      # Mount source code for live development
      - ./homy:/app
      # Preserve node_modules in container
      - /app/node_modules
    networks:
      - burrow-network
    environment:
      - CHOKIDAR_USEPOLLING=true  # Enable file watching in container

  # MongoDB service
  mongo:
    image: mongo:6.0
    container_name: burrow-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    networks:
      - burrow-network

  # Redis service
  redis:
    image: redis:7-alpine
    container_name: burrow-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - burrow-network

volumes:
  mongo-data:
  redis-data:

networks:
  burrow-network:
    driver: bridge